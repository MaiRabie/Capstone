version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.12.0
  aws-cli: circleci/aws-cli@2.0.3

jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  Docker:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: run docker
          command: |
            docker build -t helloworldweb .
            docker image ls
            docker run -p 8080:80 -d helloworldweb
            netstat -tulpn
            curl -v http://localhost:8080/index.html
      - run:
          name: docker upload
          command: |
            dockerpath="78dadb74358b/helloworldweb"
            docker login --username=78dadb74358b --password=$DOCKER_PASSWORD &&\
                docker image tag helloworldweb $dockerpath
            docker image push $dockerpath

workflows:
  default:
    jobs:
#      - build
#      - Docker
      - aws-ecr/build-and-push-image:
          name: build-and-push-image
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: ACCESS_KEY_ID
          aws-secret-access-key: SECRET_ACCESS_KEY
          region: AWS_REGION
          repo: eks_orb_demo_app
          dockerfile: Dockerfile
          path: .
          tag: ${CIRCLE_SHA1}
          create-repo: true
          executor: aws-eks/python3
          profile-name: "default"
          no-output-timeout: 20m
          # skip-when-tags-exist: false
          dockerhub-username: DOCKERHUB_USERNAME 
          dockerhub-password: DOCKERHUB_PASSWORD
          docker-login: true          
          setup-remote-docker: true
          remote-docker-version: 20.10.7


