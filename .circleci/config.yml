version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@3.1.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  Docker:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: run docker
          command: |
            docker build -t helloworldweb .
            docker image ls
            docker run -p 8080:80 -d helloworldweb
            netstat -tulpn
            curl -v http://localhost:8080/index.html
      - run:
          name: docker upload
          command: |
            dockerpath="78dadb74358b/helloworldweb"
            docker login --username=78dadb74358b --password=$DOCKER_PASSWORD &&\
                docker image tag helloworldweb $dockerpath
            docker image push $dockerpath

  deploy-application:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      docker-image-name:
        description: |
          Name of the docker image to be deployed
        type: string
      version-info:
        description: |
          App version information
        type: string
      aws-region:
        description: |
          AWS region
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: Create deployment manifest
          command: |
            # Replace the placeholders in the manifest with the intended values.
            # This is to avoid hardcoding the image name in the manifest, to make this
            # demo project more portable.
            BUILD_DATE=$(date '+%Y%m%d%H%M%S')
            cat deployment/demo-app-deployment.yaml.template |\
               sed "s|DOCKER_IMAGE_NAME|<< parameters.docker-image-name >>|\
                g;s|BUILD_DATE_VALUE|$BUILD_DATE|g;s|VERSION_INFO_VALUE|\
                << parameters.version-info >>|g" > deployment/demo-app-deployment.yaml
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          aws-region: << parameters.aws-region >>
      - kubernetes/create-or-update-resource:
          resource-file-path: "deployment/demo-app-deployment.yaml"
          get-rollout-status: true
          resource-name: deployment/demoapp
      - kubernetes/create-or-update-resource:
          resource-file-path: "deployment/demo-app-service.yaml"

workflows:
  default:
    jobs:
#      - build
#      - Docker
      - aws-ecr/build_and_push_image:
          name: build-and-push-image
          account-url: AWS_ECR_URL
          region: AWS_DEFAULT_REGION
          repo: eks_orb_demo_app
          dockerfile: ~/Capstone/Dockerfile
          path: ~/Capstone
          tag: ${CIRCLE_SHA1}
          # Uncomment if the repository does not yet exist
          create-repo: true
          executor: aws-eks/python3
          profile-name: "989865073797"

